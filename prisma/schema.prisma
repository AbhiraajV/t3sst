generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String       @id @default(cuid())
    email         String       @unique
    name          String?
    passwordHash  String
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    tasksCreated  Task[]       @relation("CreatedTasks")
    tasksAssigned Assignment[]
    comments      Comment[]
    projectsOwned Project[]    @relation("OwnedProjects")

    ProjectMember ProjectMember[]
}

model Project {
    id          String          @id @default(cuid())
    name        String
    description String?
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
    ownerId     String
    owner       User            @relation("OwnedProjects", fields: [ownerId], references: [id])
    tasks       Task[]
    members     ProjectMember[]
}

model Task {
    id          String       @id @default(cuid())
    title       String
    description String?
    deadline    DateTime?
    priority    String
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    projectId   String
    creatorId   String
    creator     User         @relation("CreatedTasks", fields: [creatorId], references: [id])
    project     Project      @relation(fields: [projectId], references: [id])
    assignments Assignment[]
    tags        TaskTag[]
    comments    Comment[]
}

model Tag {
    id    String    @id @default(cuid())
    name  String    @unique
    tasks TaskTag[]
}

model TaskTag {
    id     String @id @default(cuid())
    task   Task   @relation(fields: [taskId], references: [id])
    tag    Tag    @relation(fields: [tagId], references: [id])
    taskId String
    tagId  String

    @@unique([taskId, tagId])
}

model Assignment {
    id     String @id @default(cuid())
    task   Task   @relation(fields: [taskId], references: [id])
    user   User   @relation(fields: [userId], references: [id])
    taskId String
    userId String

    @@unique([taskId, userId])
}

model ProjectMember {
    id        String  @id @default(cuid())
    user      User    @relation(fields: [userId], references: [id])
    project   Project @relation(fields: [projectId], references: [id])
    userId    String
    projectId String

    @@unique([userId, projectId])
}

model Comment {
    id        String   @id @default(cuid())
    content   String
    taskId    String
    userId    String
    createdAt DateTime @default(now())

    task Task @relation(fields: [taskId], references: [id])
    user User @relation(fields: [userId], references: [id])
}
